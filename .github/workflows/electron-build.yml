name: Electron App Build on Release

# Trigger the workflow when a new release is created
on:
  release:
    types:
      - published  # Trigger when a release is published

jobs:
  build-mac:
    runs-on: macos-latest  # Using macOS to build the DMG file

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'  # Using Node.js 18.x LTS

    - name: Install dependencies
      run: |
        npm ci

    - name: Build Electron App
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        npm run build  # Ensure 'electron-builder' is in your package.json scripts

    - name: Upload DMG to Release
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        RELEASE_TAG="${{ github.event.release.tag_name }}"  # Get the release tag name
        gh release upload $RELEASE_TAG dist/*.dmg --clobber

    # - name: Upload Artifacts (optional)
    #   if: success()
    #   uses: actions/upload-artifact@v4  # Updated to the latest supported version
    #   with:
    #     name: electron-build
    #     path: dist/

  build-windows:
    runs-on: windows-latest  # Using Windows to build the EXE file

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Using Node.js 18.x LTS

      - name: Install dependencies
        run: |
          npm ci

      - name: Build Electron App
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm run build  # Ensure 'electron-builder' is in your package.json scripts

      - name: Upload Windows EXE to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        shell: pwsh
        run: |
          $RELEASE_TAG = "${{ github.event.release.tag_name }}"
          $EXE_FILE = Get-ChildItem -Path dist/ -Filter "*.exe" | Select-Object -ExpandProperty Name
          if ($EXE_FILE) {
            gh release upload $RELEASE_TAG "dist/$EXE_FILE" --clobber
          } else {
            Write-Error "No .exe file found in dist/"
            exit 1
          }